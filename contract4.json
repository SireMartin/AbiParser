{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "baseURI",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "buy",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "canWithdrawValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "timeNum",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "dnftNum",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cost",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "costTokenAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "costTokenDecimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dnftTokenAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDNFTPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_mainAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_dnftTokenAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_uniswapAddr",
						"type": "address"
					},
					{
						"internalType": "uint16",
						"name": "_id",
						"type": "uint16"
					},
					{
						"internalType": "address",
						"name": "_costTokenAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_cost",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_totalReturnRate",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "_maxMintTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxTokenSize",
						"type": "uint256"
					}
				],
				"name": "initProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mainAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxMintTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxTokenSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "mintBegin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mintPerTimeValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mintTimeInterval",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "mintWithdraw",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pid",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "redeem",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tid",
						"type": "uint256"
					}
				],
				"name": "tokenDetailOf",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "mining",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "totalTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propA",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propB",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propC",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "minter",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "beginTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "withdrawTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "endTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalValue",
										"type": "uint256"
									}
								],
								"internalType": "struct Lib.ProductMintItem",
								"name": "currMining",
								"type": "tuple"
							}
						],
						"internalType": "struct Lib.ProductTokenDetail",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tid",
						"type": "uint256"
					}
				],
				"name": "tokenMintHistoryOf",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "minter",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "beginTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "withdrawTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalValue",
								"type": "uint256"
							}
						],
						"internalType": "struct Lib.ProductMintItem[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "tokensOfOwner",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "mining",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "totalTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propA",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propB",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "propC",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "minter",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "beginTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "withdrawTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "endTime",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalValue",
										"type": "uint256"
									}
								],
								"internalType": "struct Lib.ProductMintItem",
								"name": "currMining",
								"type": "tuple"
							}
						],
						"internalType": "struct Lib.ProductTokenDetail[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalReturnRate",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "withdrawToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "withdrawToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"baseURI()": {
					"details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenByIndex(uint256)": {
					"details": "See {IERC721Enumerable-tokenByIndex}."
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				},
				"totalSupply()": {
					"details": "See {IERC721Enumerable-totalSupply}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DNFTProduct.sol": "DNFTProduct"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/GSN/Context.sol": {
			"keccak256": "0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938",
			"license": "MIT",
			"urls": [
				"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c",
				"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x46d2453e9db55eae25c9abdae2c42229086c54f1a6a247e8ce32658bb785f6ae",
			"license": "MIT",
			"urls": [
				"bzz-raw://198ef77ef5d9f7a7709d6bbfba1d4d54d82ccc15358e9dced37f1376dac887fa",
				"dweb:/ipfs/QmQHFvCA74s3AHU3NMn4AAYzFTt6UotWq7yk3WzLQs1oJS"
			]
		},
		"@openzeppelin/contracts/introspection/ERC165.sol": {
			"keccak256": "0x79926f3bb41403a854bdc13f3f2a38d1345d7854a52b9a92ddd18c07fa688879",
			"license": "MIT",
			"urls": [
				"bzz-raw://3ede10dc2139be174e1bf5c0126d51c8cc5ce2832bf5ce3ecf4aa669958528b2",
				"dweb:/ipfs/QmPSZzxwc6YLgetK6fumhdfgR8K58XeFpw275m2vvMcbsy"
			]
		},
		"@openzeppelin/contracts/introspection/IERC165.sol": {
			"keccak256": "0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d",
			"license": "MIT",
			"urls": [
				"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea",
				"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa"
			]
		},
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f",
				"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
				"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
			]
		},
		"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e5f78a5b3e707177aa47371e008a54b83dbd28a52055d1746534502b010c21b",
				"dweb:/ipfs/Qmeqfky5DvkMZZY3RtP6kYhFD5bZrPAMVPbqkwWhoUjZ3u"
			]
		},
		"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0x67716273a28145b606d139db21f98b9eceff1815be19cf5d461d20d180236b6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc8763d06bb85e1f9fec0f0e62a1a38128ebe26f7a5e7bad26b1ac54d1987b0f",
				"dweb:/ipfs/QmUCi79A9N6SMTYbGAWKdCTWnArKzwoAC3d718f5utU9c3"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5fd853592d6a9a1d1fdd6bd258098fb0f4632a32ea90f565661c9ba3191b5a1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b1ae36e53cab51ce9094557f8f759288768d2ae5fa117cb7ef1edf697cc7c85",
				"dweb:/ipfs/QmS2cpinhv9DLtAQAwFpR5gTr3Q8mWwWu2t39RAzgQCkjY"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
			"keccak256": "0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4",
				"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
			"keccak256": "0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573",
			"license": "MIT",
			"urls": [
				"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1",
				"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x07eeb4699ff35c761508ead6962f7cce3e297c243beb2896652ac5da6a8306b1",
			"license": "MIT",
			"urls": [
				"bzz-raw://dba32efe3ecd273b58c009b1ab4fdb33d7fcd597e77ff2648a0630948257d24f",
				"dweb:/ipfs/QmPtwp5ArRuzjnHJ1RpfE8DouB86E3hXthbk5ojLk3UhRF"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x698f929f1097637d051976b322a2d532c27df022b09010e8d091e2888a5ebdf8",
			"license": "MIT",
			"urls": [
				"bzz-raw://4bd4c9419d1182612ef415c60a83a9039b227fccb799937963448114c0473b58",
				"dweb:/ipfs/Qmat1U571v55F5JDDHHX7igGcmLF8Ehk9CzsWpjbdx3RTH"
			]
		},
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0x2424442932373c51391b31409f9620d1e1396c37f41ab9d82c51d69bebdd1ab5",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcdf37ee59c10644338fbdfb3b7692125ff42003b34990eff8b04beedd89846f",
				"dweb:/ipfs/QmTMAvXQ4DoZbUSS3oBkNr2SddRPCTrE7DZNXrFArHnk8x"
			]
		},
		"@openzeppelin/contracts/utils/EnumerableMap.sol": {
			"keccak256": "0xf7d3b7568241563b988779a2d99351bfb87144ccc1554c92ce7f333d0d1443a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://b24c06a7849e33696e1725383edff80f795e121d96fb757344546a4c5337900b",
				"dweb:/ipfs/QmSe1heSWs6hEJvgaaEEeoWkMrYSgn1YEVtb9qZWBpFUMp"
			]
		},
		"@openzeppelin/contracts/utils/EnumerableSet.sol": {
			"keccak256": "0x5420cb92cf72960b0be9dacec46b15a5558f89688d846cc6e53ec1c2d807f673",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6dd826d43bc5d033e6197236f8b55e56dfdda6d1a364f5ddfa79c134a664875",
				"dweb:/ipfs/Qmcztt4dk38dzvUtDQoJrnWNvafotNRttyah1zRVmsNyB6"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xb4866e6e88d0933a1043d55107736cc3fa1a3d57fc3aa76d140bff525fdd3568",
			"license": "MIT",
			"urls": [
				"bzz-raw://7149f17b33870900cfdd73fa352a3f80396d773a53ce8d8460b8f2e5748ea5a2",
				"dweb:/ipfs/QmdiUnEpKgeJPr5NBYVs77p1vanJbeF5SXajGwYi4Y5VAY"
			]
		},
		"contracts/DNFTLibrary.sol": {
			"keccak256": "0x7dc041589a206de7af1688755b611f77019afac28d86d9422ccf640a91174493",
			"license": "MIT",
			"urls": [
				"bzz-raw://41389604873e7503ae3aab53afccd20712376a667b48f894f30ba8c5e274c199",
				"dweb:/ipfs/QmRekN23ivSk2iwypdhezMGpCJEov8hp13FSjvjb7UZaca"
			]
		},
		"contracts/DNFTProduct.sol": {
			"keccak256": "0xa80e93806c740502b13c8836d856142440b9e8b82b6a9ae85a4635272af2c92a",
			"license": "MIT",
			"urls": [
				"bzz-raw://c045d43d9a4bb40d4906ce22e495764afcaf14a5f0ce3fe938b0d9659b5cc41c",
				"dweb:/ipfs/QmSteWMsY9QP9LaLAyEErgyxsU3oShgkjRSMQLeEdamaR7"
			]
		},
		"contracts/interfaces/IERC20Token.sol": {
			"keccak256": "0x973745ddd98b97cf0cf086e40937fb3624b8003c38e4a26b11ba19ef241ba510",
			"license": "MIT",
			"urls": [
				"bzz-raw://6dd0b1656d3f7d5ef475aeba5a81208193b38abbde12e42dfb80469f2e631e97",
				"dweb:/ipfs/QmRuuSYy5BHYZ1K5i1vaUiZUcSF2yBhfG4EAudhbvu6dcN"
			]
		},
		"contracts/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0x431f0e0d48595405fdd560b97a14c3d1d9d7bb80a6c4ff0b51c8e7ec3bd471d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://69e70cb64e15390ffcc265f59c97831c06b18843813d21dc2325616566b4935e",
				"dweb:/ipfs/QmZbKb1VbNLKg4YJUPmCEtUP4nmW8a8LA7KNwDuBfGUVND"
			]
		},
		"contracts/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x274d88647e8f2dd081337586a1374824e073e507a45a369bd80f043de1539462",
			"license": "MIT",
			"urls": [
				"bzz-raw://12802d65b3652c5af3c5a609cb0143268d292363202802d5dec905f18b1615bf",
				"dweb:/ipfs/QmWeYeJaxDqqQneRvVHxrE8k7VsKVdCZH4NcsaKSFHuk7M"
			]
		},
		"contracts/interfaces/IUniswapV2Router01.sol": {
			"keccak256": "0x6cb23baa783eec5037e9e3cb85e1b61e540a2d735cead0086758313e8f4cab96",
			"license": "MIT",
			"urls": [
				"bzz-raw://21d363fa397e2554ae71d241e0a37887460d37dbb443c21fbd0c9165fcf9a6d0",
				"dweb:/ipfs/QmXJRaEHMi2eVcjEq9ApcS9wdLhRQKxGNL96akdSdTbkHm"
			]
		},
		"contracts/interfaces/IUniswapV2Router02.sol": {
			"keccak256": "0x8780aa64071ace40795b30be1179e0e8ddf7adbc2d0e9aff9bf63e8421d80b7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a420f35b2ad2b869b7e264cd10ff06cff0222fab0e4e8d068c91495ccb70048",
				"dweb:/ipfs/QmSiyBzHmcrwh1YhSXL3jnSsf1zc4EgcZbWvK1hTdeZWGt"
			]
		}
	},
	"version": 1
}